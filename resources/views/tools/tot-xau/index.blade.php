@extends('welcome')
@section('content')
@push('styles')
    <link rel="stylesheet" href="{{ asset('/css/vanilla-daterangepicker.css?v=10.0') }}">
@endpush


    <div class="container-setup">
        <h6 class="content-title-detail"><a href="{{ route('home') }}"
                style="color: #2254AB; text-decoration: underline;">Trang ch·ªß</a><i class="bi bi-chevron-right"></i> <a
                style="color: #2254AB; text-decoration: underline;" href="">Ti·ªán √≠ch</a> <i
                class="bi bi-chevron-right"></i> <span>
                Xem ng√†y t·ªët x·∫•u</span></h6>

        <h1 class="content-title-home-lich">Xem ng√†y t·ªët x·∫•u</h1>

        <div class="row mt-4">
            <div class="col-lg-4 col-md-12 col-sm-12 mb-4">
                <div class="card border-0 shadow-lg font-tools" >
                    <div class="card-body p-4">
                        <div class="card-title text-white fw-bold mb-3 title-tong-quan-h2-log">Th√¥ng tin ng∆∞·ªùi xem</div>
                        <p class="text-white mb-4" style="opacity: 0.9; font-size: 14px;">B·∫°n h√£y nh·∫≠p th√¥ng tin v√†o √¥ d∆∞·ªõi
                            ƒë√¢y ƒë·ªÉ xem ng√†y t·ªët x·∫•u</p>

                        <form id="totXauForm">
                            <div class="mb-3">
                                <div class="input-group">
                                    <input type="text" class="form-control" id="ngayXem" placeholder="Ch·ªçn ng√†y" readonly
                                        style="border-radius: 10px; border: none; padding: 12px 45px 12px 15px; background-color: rgba(255,255,255,0.95); cursor: pointer;">
                                    <span class="input-group-text bg-transparent border-0"
                                        style="position: absolute; right: 15px; top: 50%; transform: translateY(-50%); z-index: 5;">
                                        <i class="bi-calendar-date-fill text-muted"></i>
                                    </span>
                                </div>
                                <!-- Custom Calendar Popup -->
                                <div class="custom-calendar" id="customCalendar" style="display: none;">
                                    <div class="calendar-header-date">
                                        <button type="button" class="btn-nav" id="prevMonth"><i class="bi bi-chevron-left"></i></button>
                                        <span class="month-year" id="monthYear">October 2025</span>
                                        <button type="button" class="btn-nav" id="nextMonth"><i class="bi bi-chevron-right"></i></button>
                                    </div>
                                    <div class="calendar-weekdays">
                                        <div class="weekday">CN</div>
                                        <div class="weekday">T2</div>
                                        <div class="weekday">T3</div>
                                        <div class="weekday">T4</div>
                                        <div class="weekday">T5</div>
                                        <div class="weekday">T6</div>
                                        <div class="weekday">T7</div>
                                    </div>
                                    <div class="calendar-days" id="calendarDays">
                                        <!-- Days will be generated by JavaScript -->
                                    </div>
                                    <div class="calendar-footer">
                                        <button type="button" class="btn-calendar btn-clear" id="clearDate">X√≥a</button>
                                        <button type="button" class="btn-calendar btn-today" id="todayDate">H√¥m nay</button>
                                    </div>
                                    <!-- Month/Year Picker -->
                                    <div class="calendar-picker" id="monthYearPicker" style="display: none;">
                                        <div class="picker-header">
                                            <button type="button" class="btn-nav" id="pickerPrevYear"><i class="bi bi-chevron-left"></i></button>
                                            <span class="picker-year" id="pickerYear"></span>
                                            <button type="button" class="btn-nav" id="pickerNextYear"><i class="bi bi-chevron-right"></i></button>
                                        </div>
                                        <div class="month-grid" id="monthGrid"></div>
                                    </div>
                                </div>
                            </div>
                            <hr style="color: #FFFFFF66">
                            <div class="text-white fw-bold mb-3 title-tong-quan-h2-log">Kho·∫£ng th·ªùi gian c·∫ßn xem</div>
                            <div class="mb-4">
                                <div class="input-group">
                                    <input type="text" class="form-control wedding_date_range" id="khoangNgay" placeholder="Ch·ªçn kho·∫£ng ng√†y" autocomplete="off"
                                        style="border-radius: 10px; border: none; padding: 12px 45px 12px 15px; background-color: rgba(255,255,255,0.95); cursor: pointer;">
                                    <span class="input-group-text bg-transparent border-0"
                                        style="position: absolute; right: 15px; top: 50%; transform: translateY(-50%); z-index: 5; pointer-events: none;">
                                        <i class="bi-calendar-date-fill text-muted"></i>
                                    </span>
                                </div>
                                <small class="text-white-50 d-block mt-2" style="font-size: 12px;">
                                    üí° Click v√†o √¥ tr√™n, sau ƒë√≥ b√¥i ƒëen t·ª´ ng√†y b·∫Øt ƒë·∫ßu ƒë·∫øn ng√†y k·∫øt th√∫c
                                </small>
                            </div>

                            <button type="submit" class="btn btn-light fw-bold w-100"
                                style="border-radius: 10px; padding: 12px; background-color: rgba(255,255,255,0.95); color: #357ABD; border: none;">
                                Xem Ng√†y T·ªët
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-lg-8 col-md-12 col-sm-12">
                <div class="d-flex flex-column align-items-center justify-content-center h-100 text-center">
                    <div class="mb-4">
                      <img src="{{ asset('/icons/defaild.png?v=1.0') }}" alt="defakd" class="img-fuild">
                    </div>
                    <p class="text-muted" style="font-size: 16px;">
                        Hi·ªán ch∆∞a c√≥ th√¥ng tin, b·∫°n vui l√≤ng nh·∫≠p th√¥ng tin ƒë·ªÉ xem k·∫øt qu·∫£.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Global Calendar Popup for all date inputs -->
    <div class="global-calendar" id="globalCalendar" style="display: none;">
        <div class="calendar-header">
            <button type="button" class="btn-nav" id="globalPrevMonth">&lt;</button>
            <span class="month-year" id="globalMonthYear">Th√°ng 10 2025</span>
            <button type="button" class="btn-nav" id="globalNextMonth">&gt;</button>
        </div>
        <div class="calendar-weekdays">
            <div class="weekday">CN</div>
            <div class="weekday">T2</div>
            <div class="weekday">T3</div>
            <div class="weekday">T4</div>
            <div class="weekday">T5</div>
            <div class="weekday">T6</div>
            <div class="weekday">T7</div>
        </div>
        <div class="calendar-days" id="globalCalendarDays">
            <!-- Days will be generated by JavaScript -->
        </div>
        <div class="calendar-footer">
            <button type="button" class="btn-calendar btn-clear" id="globalClearDate">X√≥a</button>
            <button type="button" class="btn-calendar btn-today" id="globalTodayDate">H√¥m nay</button>
        </div>
    </div>

   
@endsection
@push('scripts')
     <script src="{{ asset('/js/vanilla-daterangepicker.js?v=6.0') }}" defer></script>
    <script src="{{ asset('/js/custom-calendar.js?v=1.0') }}"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // ========== INITIALIZE CALENDARS ==========
            // Custom calendar cho Ng√†y Xem
            const ngayXemCalendar = new CustomCalendar({
                inputId: 'ngayXem',
                calendarId: 'customCalendar',
                defaultToToday: true
            });

            // Global calendar (n·∫øu c·∫ßn cho inputs kh√°c)
            const globalCal = new GlobalCalendar('globalCalendar');

            // ========== FORM HANDLING ==========
            const form = document.getElementById('totXauForm');
            const khoangNgay = document.getElementById('khoangNgay');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;

            // Handle form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();

                const ngayXemValue = document.getElementById('ngayXem').value;

                // Validate Ng√†y Xem
                if (!ngayXemValue) {
                    alert('Vui l√≤ng ch·ªçn ng√†y xem');
                    return;
                }

                // Validate Date Range
                if (!DateUtils.validateDateRange(khoangNgay.value)) {
                    return;
                }

                // Convert Vietnamese dates to proper format for backend
                const ngayXemDate = DateUtils.parseVietnameseDate(ngayXemValue);

                // Format birthdate as d/m/Y for backend
                let formattedBirthdate = '';
                if (ngayXemDate) {
                    const day = String(ngayXemDate.getDate()).padStart(2, '0');
                    const month = String(ngayXemDate.getMonth() + 1).padStart(2, '0');
                    const year = ngayXemDate.getFullYear();
                    formattedBirthdate = `${day}/${month}/${year}`;
                }

                // Parse date range to get start and end dates
                // Date range format: "28/10/25 - 30/10/25"
                const dateRangeParts = khoangNgay.value.split(' - ');
                let startDate = '';
                let endDate = '';

                if (dateRangeParts.length === 2) {
                    // Parse start date (format: dd/mm/yy)
                    const startParts = dateRangeParts[0].trim().split('/');
                    if (startParts.length === 3) {
                        const day = startParts[0].padStart(2, '0');
                        const month = startParts[1].padStart(2, '0');
                        let year = startParts[2];
                        // Convert 2-digit year to 4-digit
                        if (year.length === 2) {
                            year = '20' + year;
                        }
                        startDate = `${day}/${month}/${year}`;
                    }

                    // Parse end date (format: dd/mm/yy)
                    const endParts = dateRangeParts[1].trim().split('/');
                    if (endParts.length === 3) {
                        const day = endParts[0].padStart(2, '0');
                        const month = endParts[1].padStart(2, '0');
                        let year = endParts[2];
                        // Convert 2-digit year to 4-digit
                        if (year.length === 2) {
                            year = '20' + year;
                        }
                        endDate = `${day}/${month}/${year}`;
                    }
                } else if (dateRangeParts.length === 1) {
                    // Single date, use it for both start and end
                    const dateParts = dateRangeParts[0].trim().split('/');
                    if (dateParts.length === 3) {
                        const day = dateParts[0].padStart(2, '0');
                        const month = dateParts[1].padStart(2, '0');
                        let year = dateParts[2];
                        // Convert 2-digit year to 4-digit
                        if (year.length === 2) {
                            year = '20' + year;
                        }
                        startDate = endDate = `${day}/${month}/${year}`;
                    }
                }

                const sortSelect = document.querySelector('[name="sort"]');
                const sortValue = sortSelect ? sortSelect.value : 'desc';

                // Process form data
                const formData = {
                    birthdate: formattedBirthdate,
                    date_range: khoangNgay.value,
                    start_date: startDate,
                    end_date: endDate,
                    sort: sortValue, // Add sort value
                    _token: '{{ csrf_token() }}'
                };

                // Show loading state
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>ƒêang x·ª≠ l√Ω...';

                // Submit to backend using AJAX
                fetch('{{ route("totxau.checkDays") }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token() }}',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify(formData)
                })
                .then(response => response.json())
                .then(data => {
                    // Reset button state
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalBtnText;

                    if (data.success) {
                        // Update UI with results
                        const resultContainer = document.querySelector('.col-lg-8');
                        resultContainer.innerHTML = data.html;
                    } else if (data.errors) {
                        // Show validation errors
                        let errorMessage = 'Vui l√≤ng ki·ªÉm tra l·∫°i:\n';
                        for (const field in data.errors) {
                            errorMessage += '- ' + data.errors[field][0] + '\n';
                        }
                        alert(errorMessage);
                    } else {
                        alert('C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i.');
                    }
                })
                .catch(error => {
                    // Reset button state
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalBtnText;

                    console.error('Error:', error);
                    alert('C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi. Vui l√≤ng th·ª≠ l·∫°i.');
                        });
            
                        // Handle sorting change using event delegation
                        const resultContainer = document.querySelector('.col-lg-8');
                        resultContainer.addEventListener('change', function(event) {
                            if (event.target.matches('[name="sort"]')) {
                                form.requestSubmit();
                            }
                        });
                    });
        });
    </script>
@endpush
