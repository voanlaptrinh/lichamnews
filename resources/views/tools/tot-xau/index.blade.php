@extends('welcome')
@section('content')
@push('styles')
      <link rel="stylesheet" href="{{ asset('/css/tools.css') }}">
@endpush
    <div class="container-setup">
        <h6 class="content-title-detail"><a href="{{ route('home') }}"
                style="color: #2254AB; text-decoration: underline;">Trang chủ</a><i class="bi bi-chevron-right"></i> <a
                style="color: #2254AB; text-decoration: underline;" href="">Tiện ích</a> <i
                class="bi bi-chevron-right"></i> <span>
                Xem ngày tốt xấu</span></h6>

        <h1 class="content-title-home-lich">Xem ngày tốt xấu</h1>

        <div class="row mt-4">
            <div class="col-lg-4 col-md-12 col-sm-12 mb-4">
                <div class="card border-0 shadow-lg font-tools" >
                    <div class="card-body p-4">
                        <div class="card-title text-white fw-bold mb-3 title-tong-quan-h2-log">Thông tin người xem</div>
                        <p class="text-white mb-4" style="opacity: 0.9; font-size: 14px;">Bạn hãy nhập thông tin vào ô dưới
                            đây để xem ngày tốt xấu</p>

                        <form id="totXauForm">
                            <div class="mb-3">
                                <div class="input-group">
                                    <input type="text" class="form-control" id="ngayXem" placeholder="Chọn ngày" readonly
                                        style="border-radius: 10px; border: none; padding: 12px 45px 12px 15px; background-color: rgba(255,255,255,0.95); cursor: pointer;">
                                    <span class="input-group-text bg-transparent border-0"
                                        style="position: absolute; right: 15px; top: 50%; transform: translateY(-50%); z-index: 5;">
                                        <i class="bi bi-calendar3 text-muted"></i>
                                    </span>
                                </div>
                                <!-- Custom Calendar Popup -->
                                <div class="custom-calendar" id="customCalendar" style="display: none;">
                                    <div class="calendar-header">
                                        <button type="button" class="btn-nav" id="prevMonth">&lt;</button>
                                        <span class="month-year" id="monthYear">October 2025</span>
                                        <button type="button" class="btn-nav" id="nextMonth">&gt;</button>
                                    </div>
                                    <div class="calendar-weekdays">
                                        <div class="weekday">CN</div>
                                        <div class="weekday">T2</div>
                                        <div class="weekday">T3</div>
                                        <div class="weekday">T4</div>
                                        <div class="weekday">T5</div>
                                        <div class="weekday">T6</div>
                                        <div class="weekday">T7</div>
                                    </div>
                                    <div class="calendar-days" id="calendarDays">
                                        <!-- Days will be generated by JavaScript -->
                                    </div>
                                    <div class="calendar-footer">
                                        <button type="button" class="btn-calendar btn-clear" id="clearDate">Xóa</button>
                                        <button type="button" class="btn-calendar btn-today" id="todayDate">Hôm nay</button>
                                    </div>
                                </div>
                            </div>
                            <hr style="color: #FFFFFF66">
                            <div class="text-white fw-bold mb-3 title-tong-quan-h2-log">Khoảng thời gian cần xem</div>
                            <div class="mb-4">
                                <div class="input-group">
                                    <input type="text" class="form-control" id="khoangNgay" placeholder="Chọn khoảng ngày" readonly
                                        style="border-radius: 10px; border: none; padding: 12px 15px; background-color: rgba(255,255,255,0.95); cursor: pointer;">
                                    <span class="input-group-text bg-transparent border-0"
                                        style="position: absolute; right: 15px; top: 50%; transform: translateY(-50%); z-index: 5;">
                                        <i class="bi bi-calendar3 text-muted"></i>
                                    </span>
                                </div>
                                <!-- Hidden date inputs for range selection -->
                                <div class="date-range-picker" style="display: none; background: white; border-radius: 10px; padding: 15px; margin-top: 10px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
                                    <div class="row">
                                        <div class="col-6">
                                            <label class="form-label" style="font-size: 12px; color: #666;">Từ ngày:</label>
                                            <div class="position-relative">
                                                <input type="text" class="form-control date-input" id="tuNgay" placeholder="Chọn ngày" readonly style="border-radius: 8px; border: 1px solid #ddd; padding: 8px; cursor: pointer;">
                                                <i class="bi bi-calendar3 position-absolute" style="right: 10px; top: 50%; transform: translateY(-50%); color: #666;"></i>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <label class="form-label" style="font-size: 12px; color: #666;">Đến ngày:</label>
                                            <div class="position-relative">
                                                <input type="text" class="form-control date-input" id="denNgay" placeholder="Chọn ngày" readonly style="border-radius: 8px; border: 1px solid #ddd; padding: 8px; cursor: pointer;">
                                                <i class="bi bi-calendar3 position-absolute" style="right: 10px; top: 50%; transform: translateY(-50%); color: #666;"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="mt-3 text-end">
                                        <button type="button" class="btn btn-sm btn-secondary me-2" id="cancelRange">Hủy</button>
                                        <button type="button" class="btn btn-sm btn-primary" id="confirmRange">Xác nhận</button>
                                    </div>
                                </div>
                            </div>

                            <button type="submit" class="btn btn-light fw-bold w-100"
                                style="border-radius: 10px; padding: 12px; background-color: rgba(255,255,255,0.95); color: #357ABD; border: none;">
                                Xem Ngày Tốt
                            </button>
                        </form>
                    </div>
                </div>
            </div>

            <div class="col-lg-8 col-md-12 col-sm-12">
                <div class="d-flex flex-column align-items-center justify-content-center h-100 text-center">
                    <div class="mb-4">
                      <img src="{{ asset('/icons/defaild.png') }}" alt="defakd" class="img-fuild">
                    </div>
                    <p class="text-muted" style="font-size: 16px;">
                        Hiện chưa có thông tin, bạn vui lòng nhập thông tin để xem kết quả.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Global Calendar Popup for all date inputs -->
    <div class="global-calendar" id="globalCalendar" style="display: none;">
        <div class="calendar-header">
            <button type="button" class="btn-nav" id="globalPrevMonth">&lt;</button>
            <span class="month-year" id="globalMonthYear">Tháng 10 2025</span>
            <button type="button" class="btn-nav" id="globalNextMonth">&gt;</button>
        </div>
        <div class="calendar-weekdays">
            <div class="weekday">CN</div>
            <div class="weekday">T2</div>
            <div class="weekday">T3</div>
            <div class="weekday">T4</div>
            <div class="weekday">T5</div>
            <div class="weekday">T6</div>
            <div class="weekday">T7</div>
        </div>
        <div class="calendar-days" id="globalCalendarDays">
            <!-- Days will be generated by JavaScript -->
        </div>
        <div class="calendar-footer">
            <button type="button" class="btn-calendar btn-clear" id="globalClearDate">Xóa</button>
            <button type="button" class="btn-calendar btn-today" id="globalTodayDate">Hôm nay</button>
        </div>
    </div>

    <style>
        /* Global Calendar Popup */
        .global-calendar {
            position: fixed;
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 9999;
            padding: 20px;
            animation: slideDown 0.3s ease-out;
            border: 1px solid #e9ecef;
            min-width: 280px;
        }

        /* Custom Calendar Popup */
        .custom-calendar {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            z-index: 1000;
            padding: 20px;
            margin-top: 8px;
            animation: slideDown 0.3s ease-out;
            border: 1px solid #e9ecef;
        }

        .custom-calendar::before {
            content: '';
            position: absolute;
            top: -8px;
            left: 20px;
            width: 0;
            height: 0;
            border-left: 8px solid transparent;
            border-right: 8px solid transparent;
            border-bottom: 8px solid white;
            filter: drop-shadow(0 -2px 2px rgba(0,0,0,0.1));
        }

        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #f0f0f0;
        }

        .month-year {
            font-weight: 600;
            font-size: 16px;
            color: #333;
        }

        .btn-nav {
            background: none;
            border: none;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 16px;
            color: #666;
            transition: all 0.2s ease;
        }

        .btn-nav:hover {
            background: #f8f9fa;
            color: #4A90E2;
        }

        .calendar-weekdays {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            margin-bottom: 10px;
        }

        .weekday {
            text-align: center;
            font-size: 12px;
            font-weight: 600;
            color: #666;
            padding: 8px 4px;
        }

        .calendar-days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
        }

        .calendar-day {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s ease;
            margin: 0 auto;
        }

        .calendar-day:hover {
            background: #e3f2fd;
            color: #1976d2;
        }

        .calendar-day.selected {
            background: #4A90E2;
            color: white;
        }

        .calendar-day.today {
            background: #fff3e0;
            color: #f57c00;
            font-weight: 600;
        }

        .calendar-day.other-month {
            color: #ccc;
        }

        .calendar-footer {
            display: flex;
            justify-content: space-between;
            margin-top: 15px;
            padding-top: 10px;
            border-top: 1px solid #f0f0f0;
        }

        .btn-calendar {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-clear {
            background: #f8f9fa;
            color: #666;
        }

        .btn-clear:hover {
            background: #e9ecef;
        }

        .btn-today {
            background: #4A90E2;
            color: white;
        }

        .btn-today:hover {
            background: #357ABD;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Date range picker styling */
        .date-range-picker {
            background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%) !important;
            border: 1px solid rgba(0,0,0,0.1) !important;
            backdrop-filter: blur(10px);
            animation: slideDown 0.3s ease-out;
            position: relative;
            z-index: 1000;
        }

        .date-range-picker::before {
            content: '';
            position: absolute;
            top: -8px;
            left: 20px;
            width: 0;
            height: 0;
            border-left: 8px solid transparent;
            border-right: 8px solid transparent;
            border-bottom: 8px solid #ffffff;
            filter: drop-shadow(0 -2px 2px rgba(0,0,0,0.1));
        }

        .date-range-picker .form-control {
            border: 2px solid #e9ecef !important;
            transition: all 0.3s ease;
            font-size: 13px !important;
            border-radius: 8px !important;
        }

        .date-range-picker .form-control:focus {
            border-color: #4A90E2 !important;
            box-shadow: 0 0 0 0.2rem rgba(74, 144, 226, 0.25) !important;
            transform: translateY(-1px);
        }

        .date-range-picker .form-label {
            font-weight: 600 !important;
            color: #495057 !important;
            margin-bottom: 5px !important;
        }

        .date-range-picker .btn {
            border-radius: 8px !important;
            padding: 8px 16px !important;
            font-size: 13px !important;
            font-weight: 600 !important;
            transition: all 0.2s ease;
        }

        .date-range-picker .btn-secondary {
            background: linear-gradient(145deg, #6c757d 0%, #5a6268 100%) !important;
            border: none !important;
        }

        .date-range-picker .btn-secondary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(108, 117, 125, 0.3);
        }

        .date-range-picker .btn-primary {
            background: linear-gradient(145deg, #4A90E2 0%, #357ABD 100%) !important;
            border: none !important;
        }

        .date-range-picker .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(74, 144, 226, 0.4);
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .custom-calendar {
                margin: 10px;
                padding: 15px;
            }

            .date-range-picker {
                margin: 10px;
                padding: 10px !important;
            }

            .date-range-picker .col-6 {
                margin-bottom: 10px;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('totXauForm');
            const ngayXem = document.getElementById('ngayXem');
            const customCalendar = document.getElementById('customCalendar');
            const monthYear = document.getElementById('monthYear');
            const calendarDays = document.getElementById('calendarDays');
            const prevMonth = document.getElementById('prevMonth');
            const nextMonth = document.getElementById('nextMonth');
            const clearDate = document.getElementById('clearDate');
            const todayDate = document.getElementById('todayDate');

            // Global calendar elements
            const globalCalendar = document.getElementById('globalCalendar');
            const globalMonthYear = document.getElementById('globalMonthYear');
            const globalCalendarDays = document.getElementById('globalCalendarDays');
            const globalPrevMonth = document.getElementById('globalPrevMonth');
            const globalNextMonth = document.getElementById('globalNextMonth');
            const globalClearDate = document.getElementById('globalClearDate');
            const globalTodayDate = document.getElementById('globalTodayDate');

            const khoangNgay = document.getElementById('khoangNgay');
            const tuNgay = document.getElementById('tuNgay');
            const denNgay = document.getElementById('denNgay');
            const dateRangePicker = document.querySelector('.date-range-picker');
            const confirmRange = document.getElementById('confirmRange');
            const cancelRange = document.getElementById('cancelRange');

            let currentDate = new Date();
            let globalCurrentDate = new Date();
            let selectedDate = null;
            let currentInput = null;

            // Set default date to today
            const today = new Date();
            selectedDate = today;
            ngayXem.value = formatDateDisplay(today);

            // Format date functions
            function formatDate(dateString) {
                if (!dateString) return '';
                const date = new Date(dateString);
                return date.toLocaleDateString('vi-VN');
            }

            function formatDateDisplay(date) {
                return date.toLocaleDateString('vi-VN');
            }

            function formatDateValue(date) {
                return date.toISOString().split('T')[0];
            }

            // Vietnamese month names
            const monthNames = [
                'Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6',
                'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'
            ];

            // Position global calendar near input
            function positionGlobalCalendar(inputElement) {
                const rect = inputElement.getBoundingClientRect();
                const calendarHeight = 350;
                const windowHeight = window.innerHeight;

                let top = rect.bottom + window.scrollY + 5;
                if (top + calendarHeight > windowHeight + window.scrollY) {
                    top = rect.top + window.scrollY - calendarHeight - 5;
                }

                globalCalendar.style.left = rect.left + window.scrollX + 'px';
                globalCalendar.style.top = top + 'px';
            }

            // Generate global calendar
            function generateGlobalCalendar(date) {
                const year = date.getFullYear();
                const month = date.getMonth();

                globalMonthYear.textContent = `${monthNames[month]} ${year}`;

                const firstDay = new Date(year, month, 1);
                const lastDay = new Date(year, month + 1, 0);
                const firstDayWeek = firstDay.getDay();

                globalCalendarDays.innerHTML = '';

                // Previous month days
                for (let i = firstDayWeek - 1; i >= 0; i--) {
                    const day = new Date(year, month, -i);
                    const dayEl = createGlobalDayElement(day, true);
                    globalCalendarDays.appendChild(dayEl);
                }

                // Current month days
                for (let day = 1; day <= lastDay.getDate(); day++) {
                    const dayDate = new Date(year, month, day);
                    const dayEl = createGlobalDayElement(dayDate, false);
                    globalCalendarDays.appendChild(dayEl);
                }

                // Next month days
                const remainingCells = 42 - globalCalendarDays.children.length;
                for (let day = 1; day <= remainingCells; day++) {
                    const dayDate = new Date(year, month + 1, day);
                    const dayEl = createGlobalDayElement(dayDate, true);
                    globalCalendarDays.appendChild(dayEl);
                }
            }

            function createGlobalDayElement(date, isOtherMonth) {
                const dayEl = document.createElement('div');
                dayEl.className = 'calendar-day';
                dayEl.textContent = date.getDate();

                if (isOtherMonth) {
                    dayEl.classList.add('other-month');
                }

                // Check if today
                const today = new Date();
                if (date.toDateString() === today.toDateString()) {
                    dayEl.classList.add('today');
                }

                // Check if selected for current input
                if (currentInput) {
                    const inputValue = currentInput.value;
                    if (inputValue) {
                        const inputDate = parseVietnameseDate(inputValue);
                        if (inputDate && date.toDateString() === inputDate.toDateString()) {
                            dayEl.classList.add('selected');
                        }
                    }
                }

                dayEl.addEventListener('click', function() {
                    if (!isOtherMonth && currentInput) {
                        const formattedDate = formatDateDisplay(date);
                        currentInput.value = formattedDate;
                        globalCalendar.style.display = 'none';
                        generateGlobalCalendar(globalCurrentDate);
                    }
                });

                return dayEl;
            }

            // Parse Vietnamese date format
            function parseVietnameseDate(dateStr) {
                if (!dateStr) return null;
                const parts = dateStr.split('/');
                if (parts.length === 3) {
                    const day = parseInt(parts[0]);
                    const month = parseInt(parts[1]) - 1;
                    const year = parseInt(parts[2]);
                    return new Date(year, month, day);
                }
                return null;
            }

            // Generate calendar
            function generateCalendar(date) {
                const year = date.getFullYear();
                const month = date.getMonth();

                monthYear.textContent = `${monthNames[month]} ${year}`;

                const firstDay = new Date(year, month, 1);
                const lastDay = new Date(year, month + 1, 0);
                const firstDayWeek = firstDay.getDay();

                calendarDays.innerHTML = '';

                // Previous month days
                for (let i = firstDayWeek - 1; i >= 0; i--) {
                    const day = new Date(year, month, -i);
                    const dayEl = createDayElement(day, true);
                    calendarDays.appendChild(dayEl);
                }

                // Current month days
                for (let day = 1; day <= lastDay.getDate(); day++) {
                    const dayDate = new Date(year, month, day);
                    const dayEl = createDayElement(dayDate, false);
                    calendarDays.appendChild(dayEl);
                }

                // Next month days
                const remainingCells = 42 - calendarDays.children.length;
                for (let day = 1; day <= remainingCells; day++) {
                    const dayDate = new Date(year, month + 1, day);
                    const dayEl = createDayElement(dayDate, true);
                    calendarDays.appendChild(dayEl);
                }
            }

            function createDayElement(date, isOtherMonth) {
                const dayEl = document.createElement('div');
                dayEl.className = 'calendar-day';
                dayEl.textContent = date.getDate();

                if (isOtherMonth) {
                    dayEl.classList.add('other-month');
                }

                // Check if today
                const today = new Date();
                if (date.toDateString() === today.toDateString()) {
                    dayEl.classList.add('today');
                }

                // Check if selected
                if (selectedDate && date.toDateString() === selectedDate.toDateString()) {
                    dayEl.classList.add('selected');
                }

                dayEl.addEventListener('click', function() {
                    if (!isOtherMonth) {
                        selectedDate = new Date(date);
                        ngayXem.value = formatDateDisplay(selectedDate);
                        customCalendar.style.display = 'none';
                        generateCalendar(currentDate); // Refresh to show selection
                    }
                });

                return dayEl;
            }

            // Calendar navigation
            prevMonth.addEventListener('click', function() {
                currentDate.setMonth(currentDate.getMonth() - 1);
                generateCalendar(currentDate);
            });

            nextMonth.addEventListener('click', function() {
                currentDate.setMonth(currentDate.getMonth() + 1);
                generateCalendar(currentDate);
            });

            // Calendar actions
            clearDate.addEventListener('click', function() {
                selectedDate = null;
                ngayXem.value = '';
                customCalendar.style.display = 'none';
                generateCalendar(currentDate);
            });

            todayDate.addEventListener('click', function() {
                const today = new Date();
                selectedDate = today;
                currentDate = new Date(today);
                ngayXem.value = formatDateDisplay(today);
                customCalendar.style.display = 'none';
                generateCalendar(currentDate);
            });

            // Global calendar navigation
            globalPrevMonth.addEventListener('click', function() {
                globalCurrentDate.setMonth(globalCurrentDate.getMonth() - 1);
                generateGlobalCalendar(globalCurrentDate);
            });

            globalNextMonth.addEventListener('click', function() {
                globalCurrentDate.setMonth(globalCurrentDate.getMonth() + 1);
                generateGlobalCalendar(globalCurrentDate);
            });

            // Global calendar actions
            globalClearDate.addEventListener('click', function() {
                if (currentInput) {
                    currentInput.value = '';
                    globalCalendar.style.display = 'none';
                }
            });

            globalTodayDate.addEventListener('click', function() {
                if (currentInput) {
                    const today = new Date();
                    globalCurrentDate = new Date(today);
                    currentInput.value = formatDateDisplay(today);
                    globalCalendar.style.display = 'none';
                }
            });

            // Setup all date inputs to use global calendar
            function setupDateInput(input) {
                input.addEventListener('click', function() {
                    currentInput = input;
                    positionGlobalCalendar(input);
                    globalCalendar.style.display = 'block';
                    generateGlobalCalendar(globalCurrentDate);
                });
            }

            // Apply to all date inputs
            setupDateInput(ngayXem);
            setupDateInput(tuNgay);
            setupDateInput(denNgay);

            // Show/hide custom calendar (keep for backward compatibility)
            // ngayXem.addEventListener('click', function() {
            //     customCalendar.style.display = customCalendar.style.display === 'none' ? 'block' : 'none';
            //     if (customCalendar.style.display === 'block') {
            //         generateCalendar(currentDate);
            //     }
            // });

            // Show/hide date range picker
            khoangNgay.addEventListener('click', function() {
                dateRangePicker.style.display = dateRangePicker.style.display === 'none' ? 'block' : 'none';
            });

            // Hide pickers when clicking outside
            document.addEventListener('click', function(e) {
                if (!e.target.closest('.input-group') && !e.target.closest('.custom-calendar')) {
                    customCalendar.style.display = 'none';
                }
                if (!e.target.closest('.input-group') && !e.target.closest('.date-range-picker')) {
                    dateRangePicker.style.display = 'none';
                }
                if (!e.target.closest('.date-input') && !e.target.closest('.global-calendar') && !e.target.closest('#ngayXem')) {
                    globalCalendar.style.display = 'none';
                }
            });

            // Date range validation with Vietnamese format
            function validateDateRange() {
                if (tuNgay.value && denNgay.value) {
                    const fromDate = parseVietnameseDate(tuNgay.value);
                    const toDate = parseVietnameseDate(denNgay.value);

                    if (fromDate && toDate && fromDate > toDate) {
                        alert('Ngày bắt đầu không thể lớn hơn ngày kết thúc');
                        return false;
                    }
                }
                return true;
            }

            // Confirm range selection
            confirmRange.addEventListener('click', function() {
                if (!validateDateRange()) {
                    return;
                }

                if (tuNgay.value && denNgay.value) {
                    khoangNgay.value = `${tuNgay.value} - ${denNgay.value}`;
                } else if (tuNgay.value) {
                    khoangNgay.value = `Từ ${tuNgay.value}`;
                } else if (denNgay.value) {
                    khoangNgay.value = `Đến ${denNgay.value}`;
                }
                dateRangePicker.style.display = 'none';
            });

            // Cancel range selection
            cancelRange.addEventListener('click', function() {
                dateRangePicker.style.display = 'none';
            });

            // Handle form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();

                if (!ngayXem.value) {
                    alert('Vui lòng chọn ngày xem');
                    return;
                }

                if (!validateDateRange()) {
                    return;
                }

                // Convert Vietnamese dates to ISO format for backend
                const ngayXemDate = parseVietnameseDate(ngayXem.value);
                const tuNgayDate = parseVietnameseDate(tuNgay.value);
                const denNgayDate = parseVietnameseDate(denNgay.value);

                // Process form data
                const formData = {
                    ngayXem: ngayXemDate ? formatDateValue(ngayXemDate) : '',
                    tuNgay: tuNgayDate ? formatDateValue(tuNgayDate) : '',
                    denNgay: denNgayDate ? formatDateValue(denNgayDate) : '',
                    khoangNgay: khoangNgay.value,
                    // Display values
                    ngayXemDisplay: ngayXem.value,
                    tuNgayDisplay: tuNgay.value,
                    denNgayDisplay: denNgay.value
                };

                console.log('Form data:', formData);
                alert('Đã nhận thông tin:\nNgày xem: ' + ngayXem.value + '\nKhoảng ngày: ' + formData.khoangNgay);
            });

            // Initialize calendar
            generateCalendar(currentDate);
        });
    </script>
@endsection
