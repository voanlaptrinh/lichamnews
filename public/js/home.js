class LunarCalendarApp extends BasePicker{constructor(config){super(config)}
init(){this.setupDateRangePicker();this.setupChart();this.setupNavigationButtons();this.setupMonthYearSelects();this.setupCalendarClickHandler();this.setupQuickPicker();this.setupPopstateHandler()}
setupCalendarDayListeners(calendarDays,month,year){calendarDays.removeEventListener('click',this.calendarDayClickHandler);this.calendarDayClickHandler=async(e)=>{const dayElement=e.target.closest('.calendar-day:not(.empty)');if(!dayElement)return;const day=parseInt(dayElement.dataset.day);const month=parseInt(dayElement.dataset.month);const year=parseInt(dayElement.dataset.year);calendarDays.querySelectorAll('.calendar-day').forEach(el=>el.classList.remove('selected'));dayElement.classList.add('selected');const solarDay=document.getElementById('solarDay');const solarMonth=document.getElementById('solarMonth');const solarYear=document.getElementById('solarYear');if(solarDay)solarDay.value=day;if(solarMonth)solarMonth.value=month;if(solarYear)solarYear.value=year;const quickPickerOverlay=document.getElementById('quickPickerOverlay');this.closePopup(quickPickerOverlay);await Promise.all([this.updatePageContent(year,month,day),this.convertSolarToLunar()])};this.addEventListenerTracked(calendarDays,'click',this.calendarDayClickHandler)}
createOverlay(){if(!this.overlay){this.overlay=document.createElement('div');this.overlay.className='daterangepicker-overlay';document.body.appendChild(this.overlay);this.overlay.addEventListener('click',()=>{$('#month-year-picker').data('daterangepicker').hide()})}
return this.overlay}
setupDateRangePicker(){$('#month-year-picker').on('show.daterangepicker',(ev,picker)=>{if(window.innerWidth<=768){const overlay=this.createOverlay();overlay.style.display='block'}});$('#month-year-picker').on('hide.daterangepicker',(ev,picker)=>{if(this.overlay){this.closePopup(this.overlay)}})}
setupChart(){const ctx=document.getElementById('myChart');if(!ctx)return;this.currentChart=new Chart(ctx,{type:'bar',data:{labels:this.labels,datasets:[{label:'Điểm ngày',data:this.dataValues,backgroundColor:(context)=>{const chart=context.chart;const{ctx,chartArea}=chart;if(!chartArea)return;const gradient=ctx.createLinearGradient(0,chartArea.bottom,0,chartArea.top);gradient.addColorStop(0,getComputedStyle(document.documentElement).getPropertyValue('--bar-bottom-color')||'#4e79a7');gradient.addColorStop(0.6,getComputedStyle(document.documentElement).getPropertyValue('--bar-mid-color')||'#59a14f');gradient.addColorStop(1,getComputedStyle(document.documentElement).getPropertyValue('--bar-top-color')||'#9c755f');return gradient},borderRadius:{topLeft:8,topRight:8},borderSkipped:!1,hoverBackgroundColor:getComputedStyle(document.documentElement).getPropertyValue('--bar-top-color')||'#9c755f',barPercentage:0.7,categoryPercentage:0.8}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1},tooltip:{enabled:!0,callbacks:{label:function(context){return context.raw+'%'}},backgroundColor:'rgba(0,0,0,0.7)',titleColor:'#fff',bodyColor:'#fff',padding:8,displayColors:!1}},layout:{padding:{top:10,bottom:10}},scales:{x:{grid:{display:!1,drawBorder:!1},ticks:{color:getComputedStyle(document.documentElement).getPropertyValue('--text-color-light')||'#333',font:{size:13,weight:'500'},padding:10}},y:{beginAtZero:!0,max:100,ticks:{stepSize:20,callback:function(value){return value+'%'},color:getComputedStyle(document.documentElement).getPropertyValue('--text-color-light')||'#333',font:{size:13,weight:'500'},padding:10,},grid:{color:getComputedStyle(document.documentElement).getPropertyValue('--grid-line-color')||'#ddd',borderDash:[5,5],drawBorder:!1,drawOnChartArea:!0,drawTicks:!1}}}},plugins:[{id:'valueOnTop',afterDatasetsDraw(chart){const{ctx}=chart;chart.data.datasets.forEach((dataset,i)=>{chart.getDatasetMeta(i).data.forEach((bar,index)=>{const value=dataset.data[index]+'%';ctx.save();ctx.font='bold 12px sans-serif';ctx.fillStyle=getComputedStyle(document.documentElement).getPropertyValue('--text-color-light')||'#333';ctx.textAlign='center';ctx.fillText(value,bar.x,bar.y-6);ctx.restore()})})}}]})}
getCurrentDate(){return new Date(this.currentYear,this.currentMonth-1,this.currentDay)}
needsLunarUpdate(year,month,day){const solarDaySelect=document.getElementById('solarDay');const solarMonthSelect=document.getElementById('solarMonth');const solarYearSelect=document.getElementById('solarYear');return solarDaySelect&&(parseInt(solarDaySelect.value)!==day||parseInt(solarMonthSelect.value)!==month||parseInt(solarYearSelect.value)!==year)}
updateSelectsWithData(year,month,day,lunarData){const solarDaySelect=document.getElementById('solarDay');const solarMonthSelect=document.getElementById('solarMonth');const solarYearSelect=document.getElementById('solarYear');if(solarDaySelect)solarDaySelect.value=day;if(solarMonthSelect)solarMonthSelect.value=month;if(solarYearSelect)solarYearSelect.value=year;if(lunarData.success){const lunarDaySelect=document.getElementById('lunarDay');const lunarMonthSelect=document.getElementById('lunarMonth');const lunarYearSelect=document.getElementById('lunarYear');if(lunarDaySelect)lunarDaySelect.value=lunarData.lunarDay;if(lunarMonthSelect)lunarMonthSelect.value=lunarData.lunarMonth;if(lunarYearSelect)lunarYearSelect.value=lunarData.lunarYear}}
showToast(message,type='info'){const toast=document.createElement('div');toast.className=`toast toast-${type}`;toast.textContent=message;toast.style.cssText=`
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            background: ${type === 'error' ? '#f44336' : '#4caf50'};
            color: white;
            border-radius: 4px;
            z-index: 10000;
            opacity: 0;
            transition: opacity 0.3s;
        `;document.body.appendChild(toast);requestAnimationFrame(()=>toast.style.opacity='1');setTimeout(()=>{toast.style.opacity='0';setTimeout(()=>document.body.removeChild(toast),300)},3000)}
async updatePageContent(year,month,day){const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');const loadingElements=document.querySelectorAll('.date-number, .date-weekday, .date-special-event');loadingElements.forEach(el=>el.style.opacity='0.6');try{const[pageResponse,lunarResponse]=await Promise.all([fetch(this.ajaxUrl,{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({yy:year,mm:month,dd:day,birthdate:null})}),this.needsLunarUpdate(year,month,day)?fetch('/api/convert-solar-to-lunar',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({solarDay:day,solarMonth:month,solarYear:year})}):null]);const data=await pageResponse.json();const lunarData=lunarResponse?await lunarResponse.json():null;if(data.success){this.currentYear=year;this.currentMonth=month;this.currentDay=day;const newUrl=`/lich-nam-${year}/thang-${month}/ngay-${day}`;history.pushState({year,month,day},'',newUrl);this.updateUIElements(data.data);if(lunarData&&lunarData.success){this.updateSelectsWithData(year,month,day,lunarData)}
requestAnimationFrame(()=>{this.updatePopupIfOpen(year,month,day);this.updateChart(data.data.labels,data.data.dataValues)})}}catch(error){console.error('Error:',error);this.showToast('Có lỗi xảy ra. Đang thử lại...','error')}finally{loadingElements.forEach(el=>el.style.opacity='1')}}
updateUIElements(data){if(data.metaTitle){document.title=data.metaTitle}
if(data.metaDescription){const metaDescriptionTag=document.querySelector('meta[name="description"]');if(metaDescriptionTag){metaDescriptionTag.setAttribute('content',data.metaDescription)}}
const pageTitle=document.getElementById('page-title');const breadcrumbText=document.getElementById('breadcrumb-text');if(pageTitle){pageTitle.textContent=`Lịch Âm Dương Ngày ${data.dd} Tháng ${data.mm} Năm ${data.yy}`}
if(breadcrumbText){breadcrumbText.textContent=` Lịch ngày ${data.dd}/${data.mm}/${data.yy}`}
const detailContent=document.getElementById('detail-content');if(detailContent&&data.html){detailContent.innerHTML=data.html;this.setupNavigationButtons();this.setupQuickPicker();this.removeCalendarHrefs();this.updateUpcomingEvents(data.upcomingEvents)}
const duongElement=document.querySelector('.date-number.duong');if(duongElement)duongElement.textContent=data.dd;const weekdayElements=document.querySelectorAll('.date-weekday');if(weekdayElements[0]){weekdayElements[0].textContent=data.weekday}
const monthYearElements=document.querySelectorAll('.date-special-event.text-dark');if(monthYearElements[0]){monthYearElements[0].textContent=`Tháng ${data.mm} năm ${data.yy}`}
const amElement=document.querySelector('.date-number.am');if(amElement)amElement.textContent=data.al[0];if(weekdayElements[1]){weekdayElements[1].textContent=`Tháng ${data.al[1]} (${data.al[4] || ''}) năm ${data.getThongTinCanChiVaIcon?.can_chi_nam || ''}`}
if(monthYearElements[1]){monthYearElements[1].textContent=`Ngày ${data.getThongTinCanChiVaIcon?.can_chi_ngay || ''} - Tháng ${data.getThongTinCanChiVaIcon?.can_chi_thang || ''}`}
const calendarHeaderTitle=document.querySelector('.calendar-header-convert h5');if(calendarHeaderTitle){calendarHeaderTitle.textContent=`Lịch vạn niên ${data.yy} - tháng ${data.mm}`}
const monthSelect=document.getElementById('month-select');if(monthSelect){monthSelect.value=parseInt(data.mm)}
const yearSelect=document.getElementById('year-select');if(yearSelect){yearSelect.value=parseInt(data.yy)}
const statusElement=document.querySelector('.day-status');if(statusElement){statusElement.className='day-status';if(data.tot_xau_result==='tot'){statusElement.className+=' hoang-dao';statusElement.innerHTML='<span class="status-dot"></span><span class="title-status-dot"> Hoàng đạo</span>'}else if(data.tot_xau_result==='xau'){statusElement.className+=' hac-dao';statusElement.innerHTML='<span class="status-dot"></span><span class="title-status-dot"> Hắc đạo</span>'}else{statusElement.innerHTML=''}}
const tietKhiElement=document.querySelector('.icon_tiet_khi')?.nextElementSibling?.querySelector('span');if(tietKhiElement)tietKhiElement.textContent=data.tietkhi?.tiet_khi||'';const napAmElement=document.querySelector('.icon_nap_am')?.nextElementSibling;if(napAmElement)napAmElement.innerHTML=`<strong class="title-font-detail-ngay">Ngũ hành nạp âm:</strong> ${data.getThongTinNgay?.nap_am?.napAm || ''}`;const gioHoangDaoElement=document.querySelector('.icon_hoang_dao')?.nextElementSibling;if(gioHoangDaoElement)gioHoangDaoElement.innerHTML=`<strong class="title-font-detail-ngay">Giờ Hoàng đạo:</strong> ${data.getThongTinNgay?.gio_hoang_dao || ''}`;const dialElement=document.querySelector('.progress-dial');if(dialElement){const percentage=Math.round(data.getDaySummaryInfo?.score?.percentage||0);dialElement.style.setProperty('--value',percentage);const percentElement=dialElement.querySelector('.dial-percent');if(percentElement)percentElement.textContent=percentage+'%';const statusElement=dialElement.querySelector('.dial-status');if(statusElement){statusElement.textContent=data.getDaySummaryInfo?.score?.rating||'';statusElement.className='dial-status pt-2';const ratingColors={'Tốt':'text-success','Xấu':'text-danger','Trung bình':'text-warning-tb',};const colorClass=ratingColors[data.getDaySummaryInfo?.score?.rating];if(colorClass)statusElement.classList.add(colorClass);}}
const calendarBodyContainer=document.getElementById('calendar-body-container');if(calendarBodyContainer&&data.table_html){calendarBodyContainer.querySelector('tbody').innerHTML=data.table_html}
const detailLink=document.querySelector('.btn0mobie');if(detailLink){const newDetailUrl=`/lich-nam-${data.yy}/thang-${data.mm}/ngay-${data.dd}`;detailLink.href=newDetailUrl}
const suKienDuongElements=document.querySelectorAll('.su-kien-duong');suKienDuongElements.forEach(el=>el.remove());if(data.suKienDuongLich&&data.suKienDuongLich.length>0){const containerDuong=document.querySelector('.date-special-event-duong');if(containerDuong){data.suKienDuongLich.forEach(suKien=>{const div=document.createElement('div');div.className='su-kien-duong';div.textContent=suKien.ten_su_kien||suKien;containerDuong.appendChild(div)})}}
const containerAm=document.querySelector('.date-special-event-am');if(containerAm){const suKienAmElements=containerAm.querySelectorAll('.su-kien-duong');suKienAmElements.forEach(el=>el.remove());if(data.suKienAmLich&&data.suKienAmLich.length>0){data.suKienAmLich.forEach(suKien=>{const div=document.createElement('div');div.className='su-kien-duong';div.textContent=suKien.ten_su_kien||suKien;containerAm.appendChild(div)})}}
if(data.upcomingEvents){this.updateUpcomingEvents(data.upcomingEvents)}}
updateUpcomingEvents(upcomingEvents){const upcomingEventsContainer=document.querySelector('.events-list');if(upcomingEventsContainer&&upcomingEvents&&upcomingEvents.length>0){upcomingEventsContainer.innerHTML='';upcomingEvents.forEach(event=>{const eventDate=new Date(event.date);const formattedMonth=(eventDate.getMonth()+1);const formattedDay=eventDate.getDate();const li=document.createElement('li');li.className='list-group-item event-item';const lunarInfo=this.convertSolarToLunarSync(eventDate.getDate(),eventDate.getMonth()+1,eventDate.getFullYear());li.innerHTML=`
                    <a href="/lich-nam-${eventDate.getFullYear()}/thang-${formattedMonth}/ngay-${formattedDay}">
                        <div class="event-date">Ngày ${eventDate.getDate()}/${formattedMonth}
                            <span style="font-size: 12px;color: #46494E;font-style: italic;">(${lunarInfo.lunarDay}/${lunarInfo.lunarMonth} ÂL)</span>
                        </div>
                        <div class="event-icon">🗓️</div>
                        <div class="event-details">
                            <div class="event-name">${event.description}</div>
                            <div class="event-countdown">
                                ${event.days_remaining === 0 ?
                                    '<span class="text-danger fw-bold">Hôm nay</span>' :
                                    event.days_remaining === 1 ?
                                        '<span class="text-warning fw-bold">Ngày mai</span>' :
                                        `<span class="text-muted">Còn ${event.days_remaining}ngày</span>`
                                }
                            </div>
                        </div>
                    </a>
                `;upcomingEventsContainer.appendChild(li)})}}
convertSolarToLunarSync(day,month,year){const solarDate=new Date(year,month-1,day);const lunarNewYear2024=new Date(2024,1,10);const daysDiff=Math.floor((solarDate-lunarNewYear2024)/(1000*60*60*24));const lunarDay=Math.max(1,((daysDiff%30)+1));const lunarMonth=Math.max(1,Math.floor(daysDiff/30)%12+1);return{lunarDay:lunarDay,lunarMonth:lunarMonth,lunarYear:year}}
updateChart(labels,dataValues){if(this.currentChart){this.currentChart.data.labels=labels;this.currentChart.data.datasets[0].data=dataValues;this.currentChart.update()}}
setupNavigationButtons(){const debounceNavigation=this.debounce((callback)=>callback(),300);const prevBtns=document.querySelectorAll('.prev-day-btn');const nextBtns=document.querySelectorAll('.next-day-btn');prevBtns.forEach(btn=>{btn.addEventListener('click',(e)=>{e.preventDefault();if(btn.disabled)return;btn.disabled=!0;debounceNavigation(()=>{const currentDate=this.getCurrentDate();const prevDate=new Date(currentDate);prevDate.setDate(currentDate.getDate()-1);const prevYear=prevDate.getFullYear();const prevMonth=prevDate.getMonth()+1;const prevDay=prevDate.getDate();this.updatePageContent(prevYear,prevMonth,prevDay).finally(()=>{btn.disabled=!1})})})});nextBtns.forEach(btn=>{btn.addEventListener('click',(e)=>{e.preventDefault();if(btn.disabled)return;btn.disabled=!0;debounceNavigation(()=>{const currentDate=this.getCurrentDate();const nextDate=new Date(currentDate);nextDate.setDate(currentDate.getDate()+1);const nextYear=nextDate.getFullYear();const nextMonth=nextDate.getMonth()+1;const nextDay=nextDate.getDate();this.updatePageContent(nextYear,nextMonth,nextDay).finally(()=>{btn.disabled=!1})})})})}
debounce(func,delay){let timeoutId;return function(...args){clearTimeout(timeoutId);timeoutId=setTimeout(()=>func.apply(this,args),delay)}}
setupMonthYearSelects(){const monthSelect=document.getElementById('month-select');const yearSelect=document.getElementById('year-select');const calendarBodyContainer=document.getElementById('calendar-body-container');const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');if(!monthSelect||!yearSelect||!calendarBodyContainer)return;const debounce=(func,delay)=>{let timeout;return function(...args){const context=this;clearTimeout(timeout);timeout=setTimeout(()=>func.apply(context,args),delay)}};const updateCalendar=async()=>{const month=monthSelect.value;const year=yearSelect.value;const h5Element=document.querySelector('.calendar-header-convert h5');if(h5Element){h5Element.textContent=`Lịch vạn niên ${year} - tháng ${month}`}
try{const response=await fetch(this.calendarAjaxUrl,{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken},body:JSON.stringify({nam:year,thang:month})});const data=await response.json();if(data.table_html){calendarBodyContainer.querySelector('tbody').innerHTML=data.table_html;this.removeCalendarHrefs()}}catch(error){console.error('Error fetching calendar data:',error)}};const debouncedUpdateCalendar=debounce(updateCalendar,300);monthSelect.addEventListener('change',debouncedUpdateCalendar);yearSelect.addEventListener('change',debouncedUpdateCalendar)}
setupCalendarClickHandler(){const calendarBodyContainer=document.getElementById('calendar-body-container');if(calendarBodyContainer){this.removeCalendarHrefs();calendarBodyContainer.addEventListener('click',(e)=>{const link=e.target.closest('a[data-date-url]');const linkWithHref=e.target.closest('a[href*="/lich-nam-"]');if(link||linkWithHref){e.preventDefault();if(link){const href=link.getAttribute('data-date-url');this.processCalendarLink(href)}else if(linkWithHref){const href=linkWithHref.getAttribute('href');this.processCalendarLink(href);linkWithHref.setAttribute('data-date-url',href)}}})}}
reSetupCalendarClickHandler(){this.removeCalendarHrefs()}
processCalendarLink(href){if(!href)return;const regex=/\/lich-nam-(\d{4})\/thang-(\d{1,2})\/ngay-(\d{1,2})/;const match=href.match(regex);if(match){const year=parseInt(match[1]);const month=parseInt(match[2]);const day=parseInt(match[3]);if(year&&month&&day){this.updatePageContent(year,month,day)}}}
removeCalendarHrefs(){const calendarBodyContainer=document.getElementById('calendar-body-container');if(!calendarBodyContainer)return;const calendarLinks=calendarBodyContainer.querySelectorAll('a[href*="/lich-nam-"]');calendarLinks.forEach(link=>{const href=link.getAttribute('href');if(href&&href.includes('/lich-nam-')){link.setAttribute('data-date-url',href)}})}
setupQuickPicker(){const quickPickerOverlay=document.getElementById('quickPickerOverlay');const quickPickerBtns=document.querySelectorAll('.quickPickerBtn');const closeQuickPicker=document.getElementById('closeQuickPicker');const viewDateBtn=document.getElementById('viewDateBtn');if(!quickPickerOverlay||quickPickerBtns.length===0||!closeQuickPicker||!viewDateBtn){return}
let currentPopupYear=this.currentYear;let currentPopupMonth=this.currentMonth;quickPickerBtns.forEach(btn=>{const newBtn=btn.cloneNode(!0);btn.parentNode.replaceChild(newBtn,btn)});document.querySelectorAll('.quickPickerBtn').forEach(btn=>{btn.addEventListener('click',async()=>{const currentDay=parseInt(document.getElementById('solarDay')?.value||this.currentDay);const currentMonth=parseInt(document.getElementById('solarMonth')?.value||this.currentMonth);const currentYear=parseInt(document.getElementById('solarYear')?.value||this.currentYear);currentPopupMonth=currentMonth;currentPopupYear=currentYear;const popupSolarDay=document.getElementById('solarDay');const popupSolarMonth=document.getElementById('solarMonth');const popupSolarYear=document.getElementById('solarYear');if(popupSolarDay)popupSolarDay.value=currentDay;if(popupSolarMonth)popupSolarMonth.value=currentMonth;if(popupSolarYear)popupSolarYear.value=currentYear;await this.updateLunarSelectsFromSolar(currentDay,currentMonth,currentYear);quickPickerOverlay.style.display='flex';setTimeout(()=>quickPickerOverlay.classList.add('show'),10);document.body.classList.add('modal-open');this.generatePopupCalendarOptimized(currentPopupMonth,currentPopupYear,currentDay)})});closeQuickPicker.addEventListener('click',()=>{this.closePopup(quickPickerOverlay)});quickPickerOverlay.addEventListener('click',(e)=>{if(e.target===quickPickerOverlay){this.closePopup(quickPickerOverlay)}});document.getElementById('prevMonthBtn').addEventListener('click',async()=>{currentPopupMonth--;if(currentPopupMonth<1){currentPopupMonth=12;currentPopupYear--}
this.updatePopupHeader(currentPopupMonth,currentPopupYear);await this.generatePopupCalendarOptimized(currentPopupMonth,currentPopupYear)});document.getElementById('nextMonthBtn').addEventListener('click',async()=>{currentPopupMonth++;if(currentPopupMonth>12){currentPopupMonth=1;currentPopupYear++}
this.updatePopupHeader(currentPopupMonth,currentPopupYear);await this.generatePopupCalendarOptimized(currentPopupMonth,currentPopupYear)});document.getElementById('solarDay').addEventListener('change',async()=>{await this.convertSolarToLunar();await this.syncCalendarWithSolarDate()});document.getElementById('solarMonth').addEventListener('change',async()=>{await this.convertSolarToLunar();await this.syncCalendarWithSolarDate()});document.getElementById('solarYear').addEventListener('change',async()=>{await this.convertSolarToLunar();await this.syncCalendarWithSolarDate()});document.getElementById('lunarDay').addEventListener('change',async()=>{await this.convertLunarToSolar()});document.getElementById('lunarMonth').addEventListener('change',async()=>{await this.convertLunarToSolar()});document.getElementById('lunarYear').addEventListener('change',async()=>{await this.convertLunarToSolar()});viewDateBtn.addEventListener('click',async()=>{const solarDay=parseInt(document.getElementById('solarDay').value);const solarMonth=parseInt(document.getElementById('solarMonth').value);const solarYear=parseInt(document.getElementById('solarYear').value);this.closePopup(quickPickerOverlay);this.updatePageContent(solarYear,solarMonth,solarDay)})}
updatePopupHeader(month,year){const monthSpan=document.getElementById('popupMonth');const yearSpan=document.getElementById('popupYear');if(monthSpan)monthSpan.textContent=month.toString().padStart(2,'0');if(yearSpan)yearSpan.textContent=year}
closePopup(overlay){overlay.classList.remove('show');document.body.classList.remove('modal-open');setTimeout(()=>{overlay.style.display='none'},300)}
async updatePopupIfOpen(year,month,day){const quickPickerOverlay=document.getElementById('quickPickerOverlay');if(quickPickerOverlay&&quickPickerOverlay.classList.contains('show')){this.updatePopupHeader(month,year);await this.generatePopupCalendarOptimized(month,year,day)}}
async updateSelectValues(year,month,day){const solarDaySelect=document.getElementById('solarDay');const solarMonthSelect=document.getElementById('solarMonth');const solarYearSelect=document.getElementById('solarYear');if(solarDaySelect)solarDaySelect.value=day;if(solarMonthSelect)solarMonthSelect.value=month;if(solarYearSelect)solarYearSelect.value=year;try{const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');const response=await fetch('/api/convert-solar-to-lunar',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({solarDay:day,solarMonth:month,solarYear:year})});const data=await response.json();if(data.success){const lunarDaySelect=document.getElementById('lunarDay');const lunarMonthSelect=document.getElementById('lunarMonth');const lunarYearSelect=document.getElementById('lunarYear');if(lunarDaySelect)lunarDaySelect.value=data.lunarDay;if(lunarMonthSelect)lunarMonthSelect.value=data.lunarMonth;if(lunarYearSelect)lunarYearSelect.value=data.lunarYear}}catch(error){}}
async updateLunarSelectsFromSolar(day,month,year){try{const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');const response=await fetch('/api/convert-solar-to-lunar',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({solarDay:day,solarMonth:month,solarYear:year})});const data=await response.json();if(data.success){const lunarDaySelect=document.getElementById('lunarDay');const lunarMonthSelect=document.getElementById('lunarMonth');const lunarYearSelect=document.getElementById('lunarYear');if(lunarDaySelect)lunarDaySelect.value=data.lunarDay;if(lunarMonthSelect)lunarMonthSelect.value=data.lunarMonth;if(lunarYearSelect)lunarYearSelect.value=data.lunarYear}}catch(error){}}
async fetchLunarDatesForMonth(month,year,daysInMonth){const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');try{const response=await fetch('/api/get-month-lunar-dates',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({month:month,year:year})});const data=await response.json();if(data.success&&data.dates){return data.dates}else{console.error('Lỗi khi lấy dữ liệu âm lịch:',data.error);return{}}}catch(error){console.error('Lỗi khi lấy dữ liệu âm lịch cho tháng:',error);return{}}}
async syncCalendarWithSolarDate(){const day=parseInt(document.getElementById('solarDay').value);const month=parseInt(document.getElementById('solarMonth').value);const year=parseInt(document.getElementById('solarYear').value);this.updatePopupHeader(month,year);await this.generatePopupCalendarOptimized(month,year,day)}
async convertLunarToSolar(){const lunarDay=document.getElementById('lunarDay').value;const lunarMonth=document.getElementById('lunarMonth').value;const lunarYear=document.getElementById('lunarYear').value;try{const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');const response=await fetch('/api/convert-lunar-to-solar',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({lunarDay:parseInt(lunarDay),lunarMonth:parseInt(lunarMonth),lunarYear:parseInt(lunarYear)})});const data=await response.json();if(data.success){document.getElementById('solarDay').value=data.solarDay;document.getElementById('solarMonth').value=data.solarMonth;document.getElementById('solarYear').value=data.solarYear;this.updatePopupHeader(data.solarMonth,data.solarYear);await this.generatePopupCalendarOptimized(data.solarMonth,data.solarYear,data.solarDay)}}catch(error){console.error('Error converting lunar to solar:',error)}}
convertSolarToLunarSync(day,month,year){const solarDate=new Date(year,month-1,day);const lunarNewYear2024=new Date(2024,1,10);const daysDiff=Math.floor((solarDate-lunarNewYear2024)/(1000*60*60*24));const lunarDay=((daysDiff%30)+1);const lunarMonth=Math.floor(daysDiff/30)%12+1;return{lunarDay:lunarDay>0?lunarDay:1,lunarMonth:lunarMonth>0?lunarMonth:1,lunarYear:year}}
async convertSolarToLunar(){const solarDay=document.getElementById('solarDay').value;const solarMonth=document.getElementById('solarMonth').value;const solarYear=document.getElementById('solarYear').value;try{const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');const response=await fetch('/api/convert-solar-to-lunar',{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({solarDay:parseInt(solarDay),solarMonth:parseInt(solarMonth),solarYear:parseInt(solarYear)})});const data=await response.json();if(data.success){document.getElementById('lunarDay').value=data.lunarDay;document.getElementById('lunarMonth').value=data.lunarMonth;document.getElementById('lunarYear').value=data.lunarYear}}catch(error){console.error('Error converting solar to lunar:',error)}}
setupPopstateHandler(){window.addEventListener('popstate',(event)=>{if(event.state&&event.state.year&&event.state.month&&event.state.day){const{year,month,day}=event.state;this.updatePageContentFromHistory(year,month,day)}else{const currentUrl=window.location.pathname;const urlMatch=currentUrl.match(/\/lich-nam-(\d{4})\/thang-(\d{1,2})\/ngay-(\d{1,2})/);if(urlMatch){const year=parseInt(urlMatch[1]);const month=parseInt(urlMatch[2]);const day=parseInt(urlMatch[3]);this.updatePageContentFromHistory(year,month,day)}}})}
async updatePageContentFromHistory(year,month,day){const csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute('content');document.body.style.cursor='wait';try{const response=await fetch(this.ajaxUrl,{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-TOKEN':csrfToken,'Accept':'application/json'},body:JSON.stringify({yy:year,mm:month,dd:day,birthdate:null})});const data=await response.json();if(data.success){this.currentYear=year;this.currentMonth=month;this.currentDay=day;await this.updateSelectValues(year,month,day);await this.updatePopupIfOpen(year,month,day);this.updateUIElements(data.data);this.updateChart(data.data.labels,data.data.dataValues)}}catch(error){console.error('Error:',error);alert('Có lỗi xảy ra khi tải dữ liệu. Vui lòng thử lại.')}finally{document.body.style.cursor='default'}}}
window.initLunarCalendarApp=function(config){new LunarCalendarApp(config)}